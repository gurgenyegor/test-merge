name: update-release-from-master
on:
  push:
    branches:
      - master

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  AUTODEPLOY_WORKFLOW: '02-auto-deploy'

permissions:
  actions: write
  contents: write
  pull-requests: write

jobs:
  autoupdate_master_pr:
    name: Update master branch PR's
    runs-on: ubuntu-latest
    steps:
      - name: Autoupdating master PR's
        id: autoupdate
        uses: docker://chinthakagodawita/autoupdate-action:v1
        env:
          GITHUB_TOKEN: '${{ secrets.MERGE_TOKEN }}'
          RETRY_COUNT: ${{ env.RETRY_COUNT }}
          RETRY_SLEEP: ${{ env.RETRY_SLEEP }}
          MERGE_CONFLICT_ACTION: ${{ env.MERGE_CONFLICT_ACTION }}
          MERGE_MSG: "Merge master branch [skip ci]"
      - run: echo 'Merge conflicts found!'
        if: ${{ steps.autoupdate.outputs.conflicted == 'true' }}
      - run: echo 'No merge conflictssss'
        if: ${{ ! steps.autoupdate.outputs.conflicted == 'true' }}


  update_release_branch:
    name: Update relase* branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: 'Get External'
        run: 'make get-external INFRASTRUCTURE_TOKEN=${{ secrets.INFRASTRUCTURE_TOKEN }}'

      - name: Set output
        id: set_output
        run: make export-variable-github

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'
          
      - name: Merge master -> release
        uses: devmasx/merge-branch@master
        with:
            type: now
            from_branch: master
            target_branch: ${{ vars.RELEASE_VERSION }}
            github_token: ${{ steps.app-token.outputs.token }}
        if: ${{ env.SKIP_RELEASE != 'true' }}

      # - name: Run ${{ env.AUTODEPLOY_WORKFLOW }} workflow on branch ${{ vars.RELEASE_VERSION }}
      #   run: gh workflow run ${{ env.AUTODEPLOY_WORKFLOW }} --ref ${{ vars.RELEASE_VERSION }}
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      #   if: ${{ env.SKIP_RELEASE != 'true' }}
